<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
	<display-name>MVC</display-name>
	<description>MVC</description>
	
	<!-- 
		精确匹配，字母结尾		<url-pattern>/test/list</url-pattern>
		目录匹配，星号结尾		<url-pattern>/test/*</url-pattern>
		扩展名匹配，星号+字母结尾	<url-pattern>/test/*.do</url-pattern>
		以上都找不到，就用默认的SERVLET，默认配置为<url-pattern>/</url-pattern>
	-->
	<!-- 静态资源文件不进入spring mvc-->
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/css/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/js/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/excel/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/img/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/pages/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>/pls/*</url-pattern>
	</servlet-mapping>
	
	<!-- 请求Request Response 编码-->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	<!--- Spring security Filter 这个Filter会拦截所有的URL请求，并且对这些URL请求进行Spring Security的验证。
		此类仅仅是一个代理累、Spring Security将会默认初始化一串异常链，其别名默认为 springSecurityFilterChain
	 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	<!-- 一般在Struts+Spring+Hibernate的项目中都是使用listener监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 父上下文容器中保存数据源、服务层、DAO层、事务的Bean /WEB-INF/spring/spring-security.xml-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/spring-context.xml
			/WEB-INF/spring/spring-security.xml
		</param-value>
	</context-param>

	<!-- Spring MVC '/'代表所有拦截所有url、是默认servlet-->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
</web-app>